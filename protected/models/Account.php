<?php

/**
 * Created by youyi000.
 * DateTime: 2016/11/8 10:39
 * Describe：
 *      公司账户信息
 */
class Account extends BaseCacheActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return "t_account";
    }

    /**
     * 保存
     * @return bool|string
     * @throws Exception
     */
    public function save($runValidation=true,$attributes=null)
    {
        $isInDbTrans=Utility::isInDbTrans();
        if(!$isInDbTrans)
        {
            $db = Mod::app()->db;
            $trans = $db->beginTransaction();
        }
        try {
            parent::save($runValidation=true,$attributes=null);

            if(!$isInDbTrans)
            {
                $trans->commit();
            }
            return true;
        } catch (Exception $e) {
            if(!$isInDbTrans)
            {
                try { $trans->rollback(); }catch(Exception $ee){}
                return $e->getMessage();
            }
            else
                throw $e;
        }
    }

    /**
     * 删除
     * @param $id
     * @return int|string
     */
    public static function del($id)
    {
        if(empty($id))
            return "id不能为空！";
        if(!Utility::isIntString($id))
            return "非法Id";

        $sql="delete from t_account where account_id=".$id.";";
        $res=Utility::execute($sql);
        if($res==1)
        {
            return 1;
        }
        else
            return "操作失败！";
    }


    /**
    *   获取公司对应账号信息
    */
    public static function getActiveAccounts()
    {
        $res=self::getCache("accounts");
        if(!empty($res))
            return json_decode($res,true);
        $condition="status=1";
        $data=Account::model()->findAllToArray(array(
            "select"=>"account_id,bank_name,account_no,corporation_id",
            "condition"=>$condition,
            "order"=>"corporation_id desc"));
        self::setCache("accounts",json_encode($data));
        return $data;
    }

    protected function afterSave()
    {
        parent::afterSave(); // TODO: Change the autogenerated stub
        self::clearCache();
        self::clearCache('accounts');
    }
}