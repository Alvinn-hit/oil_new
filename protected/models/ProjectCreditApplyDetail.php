<?php

/**
 * Created by youyi000.
 * DateTime: 2017/4/11 11:39
 * Describe：
 */
class ProjectCreditApplyDetail extends BaseActiveRecord
{

    const STATUS_SUBMIT=2;//已申请待确认
    const STATUS_REJECT=-1;//已拒绝
    const STATUS_REJECT_OTHER=-2;//他人已拒绝
    const STATUS_TRASH=-3;//已作废
    const STATUS_CONFIRM=6;//已确认
    const STATUS_USED=9;//已使用

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return "t_project_credit_apply_detail";
    }

    public function beforeSave()
    {
        if ($this->isNewRecord)
        {
            if (empty($this->create_time))
                $this->create_time = new CDbExpression("now()");
            if (empty($this->create_user_id))
                $this->create_user_id= Utility::getNowUserId();
        }
        if ($this->update_time == $this->getOldAttribute("update_time"))
        {
            $this->update_time = new CDbExpression("now()");
            $this->update_user_id = Utility::getNowUserId();
        }
        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    public function confirm()
    {
        $trans=$this->dbConnection->getCurrentTransaction();
        if(!empty($trans))
            $isInDbTrans=true;
        else
            $isInDbTrans=false;

        if(!$isInDbTrans)
        {
            $trans = $this->dbConnection->beginTransaction();
        }
        try{

            $this->save(true,array("status","status_time","remark","update_time","update_user_id"));

            if($this->status==self::STATUS_REJECT)
            {
                ProjectCreditService::rejectCreditApply($this->apply_id);
                /*$this->updateAll(array("status"=>self::STATUS_REJECT_OTHER,"status_time"=>new CDbExpression("now()")),
                    array("condition"=>"apply_id=".$this->apply_id." and detail_id<>".$this->detail_id.""));
                ProjectCreditApply::model()->updateByPk($this->apply_id,array("status"=>ProjectCreditApply::STATUS_REJECT,"status_time"=>new CDbExpression("now()")));*/
            }
            else
            {
                $res=UserCreditService::freezeUserCreditAmount($this->user_id,$this->amount);
                if(!$res)
                {
                    $this->errorMessage="业务员当前额度不足";
                    /*if(!$isInDbTrans)
                    {
                        return false;
                    }
                    else*/
                        throw new Exception("业务员当前额度不足");
                }

                ProjectCreditService::confirmCreditApply($this->apply_id);
            }

            if(!$isInDbTrans)
            {
                $trans->commit();
            }
            return true;
        }
        catch (Exception $e)
        {
            if(!$isInDbTrans)
            {
                try{$trans->rollback();}catch(Exception $ee){}
                Mod::log("CreditConfirm Confirm Error: ".$e->getMessage(),"error");
                return false;
            }
            else
                throw $e;

        }
    }

}