<?php

/**
 * Desc: 保理回款
 * User: susiehuang
 * Date: 2017/10/26 0009
 * Time: 10:03
 */
class FactorReturn extends BaseBusinessActiveRecord {
    const STATUS_NEW = 0;
    const STATUS_SUBMIT = 1;

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 't_factoring_return';
    }

    public function relations() {
        return array(
            'factor' => array(self::BELONGS_TO, 'Factor', 'factor_id'),
            'factorDetail' => array(self::BELONGS_TO, 'FactorDetail', 'detail_id'),
        );
    }

    public function beforeSave() {
        $this->return_amount = $this->amount;

        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    /**
     * @desc 更新保理对接明细表和保理表中还款相关信息
     */
    public function afterSave() {
        if($this->status == FactorReturn::STATUS_SUBMIT) {
            $factorDetail = FactorDetail::model()->findByPk($this->detail_id);
            if(empty($factorDetail)) {
                BusinessException::throw_exception(OilError::$FACTOR_DETAIL_NOT_EXIST, array('detail_id' => $this->detail_id));
            }
            $amountData = FactoringReturnService::calculateFactorDetailReturnAmount($this->detail_id);
            $factorDetail->return_amount = $amountData['total_amount'];
            $factorDetail->return_capital = $amountData['total_capital_amount'];
            $factorDetail->return_interest = $amountData['total_interest'];
            $factorDetail->balance_interest = $this->actual_interest - $this->interest;
            $compRes = bccomp($factorDetail->amount, $amountData['total_capital_amount'], 2);
            if ($compRes === 1) { //未还完
                $factorDetail->status = FactorDetail::STATUS_IN_RETURN;
            } else { //本金还完即还清
                $factorDetail->status = FactorDetail::STATUS_RETURNED;
            }
            $factorDetail->status_time = new CDbExpression("now()");
            $res1 = $factorDetail->save();
            if($res1 !== true) {
                throw new Exception($res1);
            }
            
            $factorModel = Factor::model()->findByPk($this->factor_id);
            $amountInfo = FactoringReturnService::calculateFactorReturnAmount($this->factor_id);
            $factorModel->return_amount = $amountInfo['total_amount'];
            $factorModel->return_capital = $amountInfo['total_capital_amount'];
            $factorModel->return_interest = $amountInfo['total_interest'];
            $factorModel->balance_interest = $amountInfo['total_balance_interest'];
            $factorModel->status_time = new CDbExpression("now()");
            $res2 = $factorModel->save();
            if($res2 !== true) {
                throw new Exception($res2);
            }
        }
        return parent::afterSave();
    }
}